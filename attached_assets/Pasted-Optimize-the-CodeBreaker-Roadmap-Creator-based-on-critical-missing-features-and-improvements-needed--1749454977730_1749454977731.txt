Optimize the CodeBreaker Roadmap Creator based on critical missing features and improvements needed.

CRITICAL ISSUES TO FIX:

1. PROJECT DETAILS CUSTOMIZATION:
CURRENT PROBLEM: Too generic input parameters
REQUIRED ENHANCEMENT:
- Add more detailed project parameters:
  * Target audience (B2B/B2C/Internal tool)
  * Platform requirements (Web only/Mobile responsive/Native app)
  * User authentication needs (Simple/OAuth/Enterprise SSO)
  * Data requirements (Simple forms/Complex database/Real-time data)
  * Integration requirements (Third-party APIs/Payment systems/External services)
  * Performance requirements (Basic/High traffic/Enterprise scale)
  * Design complexity (Minimal/Standard/Custom branded)
  * Deployment preferences (Shared hosting/Cloud/Self-hosted)

- Create dynamic form that shows/hides relevant parameters based on project type
- Add "Advanced Options" section for power users
- Include budget considerations (affects tech stack recommendations)

2. CUSTOM PROJECT ANALYSIS:
CURRENT PROBLEM: Generic analysis regardless of user input
REQUIRED FIX:
- Analysis MUST reference specific user details in recommendations
- Tech stack suggestions based on actual project requirements, not templates
- Timeline estimates based on user's specific feature list
- Complexity assessment using user's actual requirements

Example improvement:
BEFORE: "Recommended: React + Node.js" (generic)
AFTER: "Recommended: React + Node.js because you mentioned real-time notifications (needs WebSockets) and user dashboard with data visualization (React's component system ideal for charts)"

3. ROADMAP PROMPT VISIBILITY:
CURRENT PROBLEM: Generated prompts not visible or have color scheme issues
REQUIRED FIX:
- Each roadmap step must show the AI prompt clearly
- Use proper color scheme contrast for readability
- Add syntax highlighting for code-related prompts
- Include copy-to-clipboard button for each prompt
- Show prompt preview in readable format

UI Requirements:
STEP 3: Build Authentication System
ðŸš€ AI ASSISTANT PROMPT:
[Light background box with dark text, good contrast]
"You are now a senior Node.js developer building ONLY an authentication system..."
[Copy to Clipboard Button]
ðŸ’¡ PROMPT EXPLANATION:
Why this prompt works: [brief explanation of the prompting strategy used]

4. INTEGRATED CODEBREAKER RESCUE:
CURRENT PROBLEM: No rescue system on roadmap page
REQUIRED IMPLEMENTATION:
- Add "Need Rescue?" button next to each roadmap step
- When clicked, opens existing custom prompt generator in modal/sidebar
- Pre-fills generator with:
  * Current step context
  * Project tech stack
  * Step-specific problem category
  * User's experience level
- After generating rescue prompt, return to roadmap page
- Show rescue prompt alongside step prompt

IMPLEMENTATION DETAILS:

ENHANCED PROJECT INPUT FORM:
```javascript
const projectInputForm = {
  basicInfo: {
    projectName: "string",
    projectDescription: "textarea (min 300 chars)",
    experienceLevel: "beginner|intermediate|advanced"
  },
  
  projectScope: {
    targetAudience: "B2B|B2C|Internal tool|Personal project",
    platform: "Web app|Mobile responsive|Native mobile|Desktop app",
    expectedUsers: "1-100|100-1000|1000+|Enterprise scale",
    projectTimeline: "Weekend project|1-2 weeks|1-2 months|Long-term"
  },
  
  technicalRequirements: {
    authenticationNeeds: "None|Simple login|OAuth|Enterprise SSO|Custom auth",
    dataComplexity: "Static content|Simple forms|Database driven|Real-time data|Complex analytics",
    integrations: ["Payment processing", "Email services", "Social media", "Analytics", "Third-party APIs"],
    performanceNeeds: "Basic|Medium traffic|High performance|Enterprise scale"
  },
  
  designRequirements: {
    designComplexity: "Minimal/functional|Standard UI|Custom branded|Complex animations",
    responsiveness: "Desktop only|Mobile friendly|Mobile first",
    accessibility: "Basic|WCAG compliant|Enterprise accessibility"
  },
  
  deploymentPrefs: {
    hostingType: "Shared hosting|Cloud platform|Self-hosted|Don't know",
    budget: "Free/minimal|Low budget|Medium budget|Enterprise budget",
    maintenance: "Set and forget|Occasional updates|Active maintenance"
  }
}
CUSTOM ANALYSIS ENGINE:
javascriptfunction generateCustomAnalysis(projectInput) {
  // Analysis must reference specific user inputs
  const analysis = {
    techStackReasoning: generateTechStackReasoning(projectInput),
    complexityJustification: explainComplexityLevel(projectInput),
    timelineEstimate: calculateRealisticTimeline(projectInput),
    potentialChallenges: identifySpecificChallenges(projectInput),
    recommendedApproach: suggestDevelopmentApproach(projectInput)
  };
  
  // Every recommendation must include "because you mentioned..." references
  return analysis;
}
ROADMAP STEP DISPLAY:
javascriptconst stepDisplay = {
  stepHeader: "Step X: [Step Name] (Estimated: X hours)",
  stepDescription: "What you'll build and why it's important",
  
  aiPrompt: {
    promptText: "Sophisticated prompt text here...",
    promptExplanation: "Why this prompting strategy works",
    copyButton: true,
    syntaxHighlighting: true
  },
  
  rescueIntegration: {
    rescueButton: "Need Rescue?",
    modalTrigger: true,
    prefilledContext: {
      currentStep: "step name",
      techStack: "user's tech stack",
      problemCategory: "inferred category",
      experienceLevel: "user's level"
    }
  },
  
  validationChecklist: ["Test requirement 1", "Test requirement 2"],
  progressTracking: {
    canMarkComplete: true,
    dependsOn: ["previous step numbers"],
    blocksSteps: ["future step numbers"]
  }
}
COLOR SCHEME & UI FIXES:

Use high contrast colors for prompt display
Background: #1a1a1a (dark) or #ffffff (light)
Text: #ffffff (on dark) or #000000 (on light)
Prompt boxes: #2d2d2d with #e0e0e0 text (dark mode)
Copy buttons: Bright blue (#007bff) with white text
Rescue buttons: Orange/red (#ff6b35) to indicate "emergency"

RESCUE INTEGRATION:

Add rescue modal/sidebar component
Connect to existing custom prompt generator
Pass roadmap context automatically
Return focus to roadmap after rescue complete

TESTING REQUIREMENTS:

Create project with detailed parameters â†’ verify analysis references specific inputs
Generate roadmap â†’ verify prompts are visible and copyable
Click rescue button â†’ verify generator opens with pre-filled context
Test on mobile â†’ verify all elements are accessible
Test color scheme â†’ verify readability in both light/dark modes

BUILD PRIORITY:

Fix prompt visibility and color scheme (immediate)
Add rescue integration (high priority)
Enhance project input form (medium priority)
Implement custom analysis engine (ongoing improvement)

COMPLETION CRITERIA:

All roadmap prompts clearly visible with good contrast
Copy-to-clipboard works for every prompt
Rescue button opens generator with pre-filled context
Project analysis references specific user inputs
Mobile responsive design maintained


This comprehensive optimization should transform the roadmap creator from generic to truly custom and user-focused!